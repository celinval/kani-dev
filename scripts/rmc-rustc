#!/usr/bin/env bash
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0 OR MIT

# Usage:
# rmc-rustc (--rmc-flags | --rmc-path)
#   - This will print the configurations used to run rmc version of rustc.
# rmc-rustc RUSTC_OPTIONS
#   - This will run RUSTC with RMC flags + the given RUSTC_OPTIONS
set -eu

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
REPO_DIR="$(dirname $SCRIPT_DIR)"

RMC_PATH=${RMC_PATH:-""}
RMC_LIB_PATH=${RMC_LIB_PATH:-""}

shopt -s nullglob
set_paths() {
    local RMC_CANDIDATES=("$REPO_DIR"/target/*/rmc-compiler)

    if [ -z "${RMC_PATH}" ]
    then
        if [[ -z ${RMC_CANDIDATES:-""} ]] || [[ ${#RMC_CANDIDATES[@]} -ne 1 ]]
        then
            echo "ERROR: Could not find RMC binary."
            echo "Looked for: '$REPO_DIR/target/*/rmc-compiler'"
            echo "Was RMC successfully built first?"
            exit 1
        fi
        RMC_PATH=${RMC_CANDIDATES[0]}
    fi

    if [ -z "${RMC_LIB_PATH}" ]
    then
        RMC_LIB_PATH=$(dirname ${RMC_PATH})/deps
    fi
}

set_paths

# Hack to enable cargo rmc
args="${*#--rmc-flags}"
if [ "$args" != "$*" ]
then
    FLAGS=("--rmc-lib ${RMC_LIB_PATH} ${RMCFLAGS} $args")
else
    FLAGS=("--rmc-lib ${RMC_LIB_PATH} $args")
fi

"${RMC_PATH}" ${FLAGS}
